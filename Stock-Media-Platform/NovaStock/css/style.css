/*-----------------------------------*\
  #style.css
\*-----------------------------------*/

/*-----------------------------------*\
  #CUSTOM PROPERTY
\*-----------------------------------*/

/* 
                          *Root Selector*
     -The :root selector allows you to target the highest-level “parent” element in the Document Object Model (DOM) or document tree.
     -One of the primary uses of :root is to define global variables that can be used throughout your stylesheets.
      By setting properties within :root, you create custom properties (also known as CSS variables) that can be accessed and reused
      in other parts of your CSS.
 */
:root {
  /*
      Color
   */
  --scrim: #000000;
  /* 
       light color
  */
  --light-background: #fafdfc;
  --light-on-background: #191c1c;
  --light-surface: #f7faf9;
  --light-on-surface: #191c1c;
  --light-surface-variant: #dae5e3;
  --light-on-surface-variant: #3f4948;
  --light-surface-container-high: #e6e9e8;
  --light-surface-container-highest: #e0e3e2;
  --light-surface-container: #eceeed;
  --light-outline: #6f7978;
  --light-outline-variant: #bec9c7;
  --light-primary: #006a67;
  --light-on-primary: #ffffff;
  --light-primary-container: #6ff7f2;
  --light-on-primary-container: #00201f;
  --light-secondary: #845400;
  --light-on-secondary: #ffffff;
  --light-secondary-container: #ffddb5;
  --light-on-secondary-container: #2a1800;
  --light-tertiary: #a93538;
  --light-on-tertiary: #ffffff;
  --light-tertiary-container: #ffdad8;
  --light-on-tertiary-container: #410006;
  --light-error: #ba1a1a;
  --light-on-error: #ffffff;
  --light-error-container: #ffdad6;
  --light-on-error-container: #410002;
  --light-inverse-surface: #2d3131;
  --light-inverse-on-surface: #eff1f0;
  --light-inverse-primary: #4edad5;

  /* 
       Dark Colors
 */

  --dark-background: #191c1c;
  --dark-on-background: #e0e3e2;
  --dark-surface: #101414;
  --dark-on-surface: #c4c7c6;
  --dark-surface-variant: #3f4948;
  --dark-on-surface-variant: #bec9c7;
  --dark-surface-container-high: #272b2a;
  --dark-surface-container-highest: #323535;
  --dark-surface-container: #1d2020;
  --dark-outline: #889392;
  --dark-outline-variant: #3f4948;
  --dark-primary: #4edad5;
  --dark-on-primary: #003735;
  --dark-primary-container: #00504e;
  --dark-on-primary-container: #6ff7f2;
  --dark-secondary: #ffb958;
  --dark-on-secondary: #462b00;
  --dark-secondary-container: #643f00;
  --dark-on-secondary-container: #ffddb5;
  --dark-tertiary: #ffb3b0;
  --dark-on-tertiary: #68000f;
  --dark-tertiary-container: #891c23;
  --dark-on-tertiary-container: #ffdad8;
  --dark-error: #ffb4ab;
  --dark-on-error: #690005;
  --dark-error-container: #93000a;
  --dark-on-error-container: #ffdad6;
  --dark-inverse-surface: #e0e3e2;
  --dark-inverse-on-surface: #191c1c;
  --dark-inverse-primary: #006a67;

  /* 
    Typography
 */

  /* font family*/
  --ff-primary: "Work Sans", sans-serif;

  /* font size */
  --fs-base: 62.5%;
  --fs-display-large: 5.7rem;
  --fs-display-medium: 4.5rem;
  --fs-display-small: 3.6rem;
  --fs-headline-large: 3.2rem;
  --fs-headline-medium: 2.8rem;
  --fs-headline-small: 2.4rem;
  --fs-title-large: 2.2rem;
  --fs-title-medium: 1.6rem;
  --fs-title-small: 1.4rem;
  --fs-label-large: 1.4rem;
  --fs-label-medium: 1.2rem;
  --fs-label-small: 1.1rem;
  --fs-body-large: 1.6rem;
  --fs-body-medium: 1.4rem;
  --fs-body-small: 1.2rem;

  /* font weight */
  --weight-regular: 400;
  --weight-medium: 500;

  /**
  * Boarder radius 
  */
  --radius-extra-small: 4px;
  --radius-small: 8px;
  --radius-medium: 12px;
  --radius-large: 16px;
  --radius-large-end: 0 16px 16px 0;
  --radius-extra-large: 28px;
  --radius-circle: 50%;
  --radius-full: 500px;

  /**
  *Elevation
 */
  --elevation-1: 0 1px 2px hsla(0, 0%, 0%, 0.3),
    0 1px 3px 1px hsla(0, 0%, 0%, 0.15);
  --elevation-2: 0 1px 2px hsla(0, 0%, 0%, 0.3),
    0 2px 6px 2px hsla(0, 0%, 0%, 0.15);

  /**
    Others

    */
  --top-app-bar-height: 64px;
}

/*  
The @media(prefers-reduced-motion: no-preference) CSS rule caters to users comfortable with standard motion experiences, enabling developers to adapt animations based on preferences. It's part of accessibility efforts, addressing discomfort or motion sensitivity by allowing users to express motion preferences, guiding design adjustments for a smoother browsing experience.
*/
@media (prefers-reduced-motion: no-preference) {
  :root {
    /**
          TRANSITION
     */

    /* Duration  */
    --motion-duration-short-1: 100ms;
    --motion-duration-short-2: 200ms;
    --motion-duration-medium-1: 250ms;
    --motion-duration-medium-2: 400ms;
    --motion-duration-long: 500ms;

    /*  easing */
    --motion-easing-linear: cubic-bezier(0, 0, 1, 1);
    --motion-easing-standard: cubic-bezier(0.2, 0, 0, 1);
    --motion-easing-emphasized: cubic-bezier(0.2, 0, 0, 1);
    --motion-easing-emphasized-decelerate: cubic-bezier(0.05, 0.7, 0.1, 1);
    --motion-easing-emphasized-accelerate: cubic-bezier(0.3, 0, 0.8, 0.15);
    --motion-easing-legacy: cubic-bezier(0.4, 0, 0.2, 1);
  }
}

[data-theme="light"] {
  color-scheme: light;
  --background: var(--light-background);
  --on-background: var(--light-on-background);
  --surface: var(--light-surface);
  --on-surface: var(--light-on-surface);
  --surface-variant: var(--light-surface-variant);
  --on-surface-variant: var(--light-on-surface-variant);
  --surface-container-high: var(--light-surface-container-high);
  --surface-container-highest: var(--light-surface-container-highest);
  --surface-container: var(--light-surface-container);
  --outline: var(--light-outline);
  --outline-variant: var(--light-outline-variant);
  --primary: var(--light-primary);
  --on-primary: var(--light-on-primary);
  --primary-container: var(--light-primary-container);
  --on-primary-container: var(--light-on-primary-container);
  --secondary: var(--light-secondary);
  --on-secondary: var(--light-on-secondary);
  --secondary-container: var(--light-secondary-container);
  --on-secondary-container: var(--light-on-secondary-container);
  --tertiary: var(--light-tertiary);
  --on-tertiary: var(--light-on-tertiary);
  --tertiary-container: var(--light-tertiary-container);
  --on-tertiary-container: var(--light-on-tertiary-container);
  --error: var(--light-error);
  --on-error: var(--light-on-error);
  --error-container: var(--light-error-container);
  --on-error-container: var(--light-on-error-container);
  --inverse-surface: var(--light-inverse-surface);
  --inverse-on-surface: var(--light-inverse-on-surface);
  --inverse-primary: var(--light-inverse-primary);
}

[data-theme="dark"] {
  color-scheme: dark;
  --background: var(--dark-background);
  --on-background: var(--dark-on-background);
  --surface: var(--dark-surface);
  --on-surface: var(--dark-on-surface);
  --surface-variant: var(--dark-surface-variant);
  --on-surface-variant: var(--dark-on-surface-variant);
  --surface-container-high: var(--dark-surface-container-high);
  --surface-container-highest: var(--dark-surface-container-highest);
  --surface-container: var(--dark-surface-container);
  --outline: var(--dark-outline);
  --outline-variant: var(--dark-outline-variant);
  --primary: var(--dark-primary);
  --on-primary: var(--dark-on-primary);
  --primary-container: var(--dark-primary-container);
  --on-primary-container: var(--dark-on-primary-container);
  --secondary: var(--dark-secondary);
  --on-secondary: var(--dark-on-secondary);
  --secondary-container: var(--dark-secondary-container);
  --on-secondary-container: var(--dark-on-secondary-container);
  --tertiary: var(--dark-tertiary);
  --on-tertiary: var(--dark-on-tertiary);
  --tertiary-container: var(--dark-tertiary-container);
  --on-tertiary-container: var(--dark-on-tertiary-container);
  --error: var(--dark-error);
  --on-error: var(--dark-on-error);
  --error-container: var(--dark-error-container);
  --on-error-container: var(--dark-on-error-container);
  --inverse-surface: var(--dark-inverse-surface);
  --inverse-on-surface: var(--dark-inverse-on-surface);
  --inverse-primary: var(--dark-inverse-primary);
}

/*-----------------------------------*\
  #RESET
\*-----------------------------------*/
/* Resetting margin, padding, and box-sizing for all elements and their pseudo-elements */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Removing default list-style (bullet points) from list items */
li {
  list-style: none;
}

/**
 Setting display property of certain elements to block for easier styling 
display: block; it makes these elements behave like block-level elements, causing them to start on a new line and take up the full width available in their container.
 */
a,
img,
span,
input,
video,
button {
  display: block;
}

img {
  height: auto;
}

a {
  height: auto;
}

input,
button {
  background: none;
  font: inherit;
  border: none;
  outline: none;
}

input {
  width: 100%;
}

button {
  cursor: pointer;
}

html {
  font-family: var(--ff-primary);
  font-size: var(--fs-base);
  scroll-behavior: smooth;
  -webkit-tap-highlight-color: transparent;
}

body {
  background-color: var(--background);
  color: var(--on-background);
  font-size: 1.6rem;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  /* height: 300vh; */
  transition: opacity var(--motion-duration-medium-2)
    var(--motion-easing-linear);
  /* opacity: 0; */
}

button:disabled {
  cursor: default;
  opacity: 0.5;
}

/*-----------------------------------*\
  #TYPOGRAPHY
\*-----------------------------------*/

.display-large {
  font-size: var(--fs-display-large);
  font-weight: var(--weight-regular);
  line-height: 64px;
}

.display-medium {
  font-size: var(--fs-display-medium);
  font-weight: var(--weight-regular);
  line-height: 52px;
}

.display-small {
  font-size: var(--fs-display-small);
  font-weight: var(--weight-regular);
  line-height: 44px;
}

.headline-large {
  font-size: var(--fs-headline-large);
  font-weight: var(--weight-regular);
  line-height: 40px;
}

.headline-medium {
  font-size: var(--fs-headline-medium);
  font-weight: var(--weight-regular);
  line-height: 36px;
}

.headline-small {
  font-size: var(--fs-headline-small);
  font-weight: var(--weight-regular);
  line-height: 32px;
}

.title-large {
  font-size: var(--fs-title-large);
  font-weight: var(--weight-medium);
  line-height: 24px;
}

.title-medium {
  font-size: var(--fs-title-medium);
  font-weight: var(--weight-medium);
  line-height: 24px;
}

.title-small {
  font-size: var(--fs-title-small);
  font-weight: var(--weight-medium);
  line-height: 20px;
  letter-spacing: 0.1px;
}

.label-large {
  font-size: var(--fs-label-large);
  font-weight: var(--weight-medium);
  line-height: 20px;
  letter-spacing: 0.1px;
}

.label-medium {
  font-size: var(--fs-label-medium);
  font-weight: var(--weight-medium);
  line-height: 16px;
  letter-spacing: 0.5px;
}

.label-small {
  font-size: var(--fs-label-small);
  font-weight: var(--weight-medium);
  line-height: 16px;
  letter-spacing: 0.5px;
}

.body-large {
  font-size: var(--fs-body-large);
  font-weight: var(--weight-regular);
  line-height: 24px;
  letter-spacing: 0.5px;
}

.body-medium {
  font-size: var(--fs-body-medium);
  font-weight: var(--weight-regular);
  line-height: 20px;
  letter-spacing: 0.25px;
}

.body-small {
  font-size: var(--fs-body-small);
  font-weight: var(--weight-regular);
  line-height: 16px;
  letter-spacing: 0.4px;
}

/*-----------------------------------*\
  #REUSED STYLE
\*-----------------------------------*/

/* Styling for the material symbols */
.material-symbols-outlined {
  display: block;
  /* 1em height/width making them square */
  height: 1em;
  width: 1em;
  font-variation-settings: "FILL" 0, "wght" 400, "GRAD" 0, "opsz", 24;
}

/* Positioning for elements with a child .state-layer */
:has(> .state-layer) {
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.ripple,
.state-layer {
  background-color: var(--state-layer-bg);
  position: absolute;
  pointer-events: none;
  z-index: 1;
}

.state-layer {
  border-radius: inherit;
  inset: 0;
  opacity: 0;
  transition: var(--motion-duration-short-2) var(--motion-easing-linear);
}

/* 
    - Selects an element that has a direct child with the class .state-layer 
    - The :hover pseudo-class applies when the parent element is hovered over
    - The > combinator selects only direct children of the parent element
    - When the parent is hovered over, the opacity of the child element is set to 0.08
*/
:has(> .state-layer):hover > .state-layer {
  opacity: 0.08;
}

/*
    In ripple.js this ripple  class add dynamically  through js, typically during a pointerdown event, and is removed after the animation completes. The animation duration is set to 800ms, and the motion easing is defined by the variable --motion-easing-standard.
*/

/* 
    The ripple class defines the styling and animation for the ripple effect.
    It positions the ripple at the center of its parent element and sets its initial opacity.
    The animation property is used to animate the scale of the ripple over time.
*/

.ripple {
  /* Position the ripple at the center of its parent element */
  top: 50%; /* Vertically centered */
  left: 50%; /* Horizontally centered */

  /* Correctly position the ripple in the center */
  translate: -50% -50%;
  transform-origin: center; /* Set the transform origin to the center for scaling */

  /* Define the shape and opacity of the ripple */
  border-radius: var(--radius-circle); /* Make the ripple circular */
  opacity: 0.12; /* Set initial opacity to create a subtle effect */

  /* Define the animation for the ripple effect */
  animation: ripple 800ms var(--motion-easing-standard) forwards; /* Apply the ripple animation */
}

/* Define the keyframes for the ripple animation */
@keyframes ripple {
  /* Start the animation with a large scale */
  0% {
    transform: scale(1000); /* Set initial scale to a large value */
  }

  /* End the animation with a smaller scale */
  100% {
    transform: scale(
      2.5
    ); /* Gradually decrease the scale to create the ripple effect */
  }
}

.logo {
  font-size: 2.6rem;
  font-weight: var(--weight-medium);
  line-height: 28px;
  letter-spacing: -0.5px;
}

.divider {
  height: 1px;
  max-width: 100%;
  background-color: var(--outline-variant);
}

/*-----------------------------------*\
  #COMPONENT
\*-----------------------------------*/

/**
 * Icon button
 */
.icon-btn {
  color: var(--on-surface-variant);
  --state-layer-bg: var(--on-surface-variant);
  position: relative;
  min-width: 48px;
  width: 48px;
  height: 48px;
  display: grid;
  place-items: center;
  border-radius: var(--radius-circle);
}

/* 
The > character is used to indicate a child selector. In this case, it is selecting the state-layer class within the icon-btn element. This means that any styles applied to the state-layer class will only apply to the element that is a child of the icon-btn element.
 */

.icon-btn > .state-layer {
  /* The inset property is used to create a  shadow effect on the button when its hovered*/
  inset: 4px;
}

.icon-btn > .ripple {
  width: 40px;
  height: 40px;
  animation: icon-button-ripple 200ms var(--motion-easing-standard) forwards;
}

@keyframes icon-button-ripple {
  0% {
    transform: scale(0);
  }

  100% {
    transform: scale(1);
  }
}

/**
 * Segment button from btn-group button
 */

/* btn-group cotains photos button and video button */
.btn-segment {
  color: var(--on-surface);
  --state-layer-bg: var(--on-surface);
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 8px;
  padding-inline: 12px;
  height: 50px;
  flex-grow: 1;
}

/* adds a 1px solid border on the right side of each button within a button group, except for the last button, to visually separate the segments. */
.btn-group .btn-segment:not(:last-child) {
  border-inline-end: 1px solid var(--outline);
}

.btn-group {
  margin: 20px;
  display: flex;
  border: 1px solid var(--outline);
  border-radius: var(--radius-full);
  overflow: hidden;
}

.btn-segment .material-symbols-outlined {
  font-size: 1.8rem;
}

.btn-segment.selected {
  background-color: var(--secondary-container);
  color: var(--on-secondary-container);
  --state-layer-bg: var(--on-secondary-container);
}

/**
 * Split btn
 */

/**
 * Search view
 */

.search-view {
  background-color: var(--surface-container-high);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100dvh;
  z-index: 5;
  opacity: 0;
  visibility: hidden;
  transition: var(--motion-duration-short-2) var(--motion-easing-standard);
  transition-property: opacity, visibility;
}

.search-view.show {
  opacity: 1;
  visibility: visible;
}

.input-wrapper .leading-icon {
  display: none;
}

.search-bar {
  /* contain back arrow, search input ,close button, and search nutton */
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-inline: 4px;
  height: 72px;
  border-block-end: 1px solid var(--outline);
}

.search-bar .icon-button {
  /* flex-shrink property is set to 0 for the .icon-button class, which means that the button will not shrink when there is not enough space for all of the buttons in the same row. */
  flex-shrink: 0;
}

.input-field {
  color: var(--on-surface);
}

.input-wrapper {
  flex-grow: 1;
}

.input-wrapper .input-field {
  height: 100%;
}

.input-field::placeholder {
  color: var(--on-surface-variant);
}

/* The CSS selector .input-field::-webkit-search-cancel-button targets the search cancel button in webkit-based browsers, */
.input-field::-webkit-search-cancel-button {
  display: none;
}

/* This selector is used to hide the icon button when the placeholder text is shown. */
.input-wrapper:has(:placeholder-shown) + .icon-btn {
  display: none;
}

.search-bar .search-btn {
  /* <!--  Submit search button --> */
  --state-layer-bg: var(--primary);
  color: var(--primary);
}

/**
 * List
 */

.list {
  /*short form->  top and bottom padding of the element will be 8 pixels. */
  padding-block: 8px;
}

.list-item {
  display: flex;
  align-items: center;
  gap: 16px;
  padding-inline: 16px 24px;
  padding-block: 8px;
  height: 48px;
  width: 100%;
  --state-layer-bg: var(--on-surface);
}

.list-item .text {
  color: var(--on-surface);
}

.list-item .leading-icon {
  font-size: 1.8rem;
  color: var(--on-surface-variant);
}

/**
 * Navigation
 */

.navigation {
  /* Define the width of the navigation drawer */
  --navigation-drawer-width: 320px;

  /* Set the background color using a custom property */
  background-color: var(--surface);

  /* Ensure the navigation drawer remains fixed */
  position: fixed;

  /* Position the navigation drawer at the top-left corner of the viewport */
  top: 0;
  left: 0;

  /* Extend the navigation drawer to cover the entire height of the viewport */
  bottom: 0;

  max-width: var(--navigation-drawer-width);
  width: 0;
  z-index: 6;
  /* Initially hide the navigation drawer */
  visibility: hidden;

  transition: var(--motion-duration-medium-1)
    var(--motion-easing-emphasized-accelerate);
  transition-property: width, visibility;
  border-radius: var(--radius-large-end);
}

.navigation.show {
  width: var(--navigation-drawer-width);
  visibility: visible;
  transition: var(--motion-duration-long)
    var(--motion-easing-emphasized-decelerate);
}

.navigation-header {
  display: flex;
  align-items: center;
  gap: 16px;
  padding-block: 8px 12px;
}
.navigation-header,
.drawer-list {
  padding-inline: 12px;
  opacity: 0;
  transition: var(--motion-duration-medium-1) var(--motion-easing-emphasized);
}

.navigation.show :where(.navigation-header, .drawer-list) {
  opacity: 1;
  transition: var(--motion-duration-long)
    var(--motion-easing-emphasized-decelerate);
}

.navigation.show .navigation-header {
  transition: var(--motion-duration-short-2)
    var(--motion-easing-emphasized-accelerate);
}

.drawer-link {
  text-decoration: none;
  --state-layer-bg: var(--on-surface);
  display: flex;
  align-items: center;
  gap: 12px;
  width: 100%;
  height: 56px;
  padding-left: 10px;
  padding-inline: 20px, 24px;
  text-transform: capitalize;
  border-radius: var(--radius-full);
}

.drawer-link.active {
  background-color: var(--secondary-container);
  color: var(--on-secondary-container);
  --state-layer-bg: var(--on-secondary-container);
}

.drawer-link.active .leading-icon {
  font-variant-setting: "FILL" 1;
}
/**
 * Button
 */

.btn {
  text-decoration: none;
  color: rgb(202, 202, 202);
  height: 40px;
  max-width: max-content;
  display: flex;
  align-items: center;
  gap: 8px;
  padding-inline: 24px;
  border-radius: var(--radius-full);
  transition: box-shadow var(--motion-duration-short-2)
    var(--motion-easing-linear);
}

.btn:hover {
  box-shadow: var(--elevation-1);
}
.btn:focus {
  box-shadow: none;
}

.btn-primary {
  background-color: var(--primary);
  color: var(--on-primary);
  --state-layer-bg: var(--on-primary);
}

.btn-secondary {
  background-color: var(--secondary);
  color: var(--on-secondary);
  --state-layer-bg: var(--on-secondary);
}

.btn-tertiary {
  background-color: var(--tertiary);
  color: var(--on-tertiary);
  --state-layer-bg: var(--on-tertiary);
}

/**
 * Card
 */

/**
 * Menu
 */

/**
 * Filter chip
 */

/*-----------------------------------*\
  #TOP APP BAR
\*-----------------------------------*/
.logo {
  text-decoration: none;
  color: var(--on-background);
}

.top-app-bar {
  background-color: var(--surface);
  display: flex;
  align-items: center;
  padding-inline: 4px;
  height: var(--top-app-bar-height);
  position: fixed;
  /* creating elements like navigation bars or headers that should remain visible at all times as the user scrolls through the content of the page.*/
  top: 0;
  width: 100%;
  z-index: 4;
  /* Ensures it's above other content */
  transition: background-color var(--motion-duration-short-2)
    var(--motion-easing-linear);
}

.top-app-bar.active {
  background-color: var(--surface-container);
}

/* Center the logo horizontally with a 4px margin on the inline start side */
.top-app-bar .logo {
  margin-inline: 4px auto;
}

/* Switches the icon based on the current theme */

[data-theme="light"] .theme-btn .light-icon,
[data-theme="dark"] .theme-btn .dark-icon {
  display: none;
}

.search-view-content .divider {
  margin-inline: 16px;
}

/*-----------------------------------*\
  #SCRIM
\*-----------------------------------*/

.scrim {
  /* Ensure the scrim covers the entire viewport */
  position: fixed;
  inset: 0; /* Sets top, right, bottom, and left to 0 ---  covers the entire viewport*/
  background-color: var(--scrim); /* Background color */
  z-index: 5; /* Overlay above other content */
  opacity: 0; /* Initial opacity */
  visibility: hidden; /* Initial visibility */
  transition: var(--motion-duration-short-2) var(--motion-easing-linear); /* Smooth transition effect */
  transition-property: visibility, opacity; /* Properties to transition */
}

.scrim.active {
  visibility: visible;
  opacity: 0.5;
}

/*-----------------------------------*\
  #MAIN
\*-----------------------------------*/

.main {
  padding-block-start: calc(var(--top-app-bar-height)+16px);
  flex-grow: 1;
}

/*-----------------------------------*\
  #BANNER
\*-----------------------------------*/

/* banner card primary, secondary, tertiary */
/* Defines styles for a banner section containing horizontally scrollable content. */

.banner {
  display: flex;
  gap: 16px;
  /* Set padding to the left and right sides */
  padding-inline: 16px;

  /* Set padding to the bottom side */
  padding-block-end: 18px;

  /* Add margin to the bottom side */
  margin-block-end: 24px;

  /* Allow horizontal overflow */
  overflow-x: auto; 

  /* Ensure smooth scrolling stops at each snap point */
  scroll-snap-type: inline mandatory;
  scroll-snap-stop: always;
  /* Define the behavior of scrolling past the end of the container */
  overscroll-behavior-x: contain;
}

.banner::-webkit-scrollbar{
  height: 6px;
}
.banner::-webkit-scrollbar-track{
  background-color: var(--surface-variant);
}

.banner::-webkit-scrollbar-thumb{
  background-color: var(--on-surface-variant);
  border-radius: var(--radius-full);
}

.banner::-webkit-scrollbar-button{
  width: calc(25% - 28px);
}
/* Define custom properties for gradient direction and HSL colors for primary, secondary, and tertiary elements */
.banner-card {
  --gradient-direction: 180deg; /* Gradient direction set to 180 degrees , would create a horizontal gradient from left to right */

  /* Set the position to relative to allow positioning relative to its normal position */
  position: relative;

  /* Set a fixed height for the banner card */
  height: 360px;

  /* Ensure the banner card occupies the full width of its container */
  min-width: 100%;

  /* Apply border-radius to give rounded corners */
  border-radius: var(--radius-extra-large);

  /* Use flexbox to align items at the bottom of the banner card */
  display: flex;
  align-items: flex-end;

  /* Hide any content that overflows the banner card */
  overflow: hidden;
  scroll-snap-align: start;
  scroll-margin-inline: 16px;

  /* Set the z-index to ensure the banner card appears above other elements */
  z-index: 1;
}

/* Styles for different themes based on the data-theme attribute */
[data-theme="dark"] .banner-card {
  /* HSL (Hue, Saturation, Lightness) */
  --primary-hsl: 170, 100%, 16%; /* Primary color in HSL format */
  --secondary-hsl: 38, 100%, 20%; /* Secondary color in HSL format */
  --tertiary-hsl: 356, 66%, 32%; /* Tertiary color in HSL format */
}
[data-theme="light"] .banner-card {
  /* HSL (Hue, Saturation, Lightness) */
  --primary-hsl: 170, 100%, 16%; /* Primary color in HSL format */
  --secondary-hsl: 38, 100%, 20%; /* Secondary color in HSL format */
  --tertiary-hsl: 356, 66%, 32%; /* Tertiary color in HSL format */
}
.banner-card.primary {
  background-color: var(--primary-container);
  color: var(--on-primary-container);
  box-shadow: 0 2px 2px -1px #00201f; /* Drop shadow for primary banner card */
}

.banner-card.secondary {
  background-color: var(--secondary-container);
  color: var(--on-secondary-container);
  box-shadow: 0 2px 2px -1px #2a1800; /* Drop shadow for secondary banner card */
}

.banner-card.tertiary {
  background-color: var(--tertiary-container);
  color: var(--on-tertiary-container);
  box-shadow: 0 2px 2px -1px #410006; /* Drop shadow for tertiary banner card */
}

/* Styles for the content within the banner card */
.banner-card .card-content {
  /* Set the gradient direction and HSL color */
  --gradient-hsl: var(--primary-hsl);

  /* Set the height and width to fill the container */
  height: 100%;
  width: 100%;

  /* Use grid layout for positioning */
  display: grid;
  align-content: flex-end;
  gap: 12px;
  padding: 24px;

  /* Define the linear gradient background */
  background-image: linear-gradient(
    var(--gradient-direction),
    hsla(var(--gradient-hsl), 0) 0%,
    /* Adjusted format of percentage */ hsla(var(--gradient-hsl), 0.36) 24%,
    /* Adjusted format of percentage */ hsla(var(--gradient-hsl), 0.64) 48%,
    /* Adjusted format of percentage */ hsla(var(--gradient-hsl), 1) 68%
      /* Adjusted format of percentage */
  );
}

.banner-card.secondary .card-content {
  /* Set the gradient direction and HSL color for secondary card */
  --gradient-hsl: var(--secondary-hsl);
}

.banner-card.tertiary .card-content {
  /* Set the gradient direction and HSL color for tertiary card */
  --gradient-hsl: var(--tertiary-hsl);
}

/* Title of the card */
.banner-card .card-title {
  width: 16ch; /* Set width for the card title */
  /* Further information about the card in <p> tag */
}

.banner-card .card-text {
  display: none; /* Hide the text content of the card */
}

/* Contains the images/videos */
.banner-card .card-grid {
  position: absolute;
  top: -16px;
  left: -16px;
  right: -16px;
  bottom: 28%;
  display: grid;
  gap: 12px;
  grid-template-areas:
    "b1 b1 b2 b2 b3 b3 b3 b3"
    "b1 b1 b2 b2 b3 b3 b3 b3"
    "b4 b4 b2 b2 b3 b3 b3 b3"
    "b4 b4 b5 b5 b5 b6 b6 b6"
    "b4 b4 b5 b5 b5 b6 b6 b6";
  grid-template-columns: repeat(8, minmax(0, 1fr));
  grid-template-rows: repeat(5, minmax(0, 1fr));
  z-index: -1;
}

/* Styles for individual images/videos within the card grid */
.banner-card .card-banner {
  border-radius: var(--radius-large);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  overflow: hidden;
}

.banner-card .card-banner .video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  scale: 1.05; /* Corrected the scale property */
}

.banner-card.primary .card-banner {
  background-color: var(--on-primary-container);
  box-shadow: 0 2px 2px -1px #00201f; /* Updated shadow color with RGBA */
}

.banner-card.secondary .card-banner {
  background-color: var(--on-secondary-container);
  box-shadow: 0 2px 2px -1px #2a1800; /* Updated shadow color with RGBA */
}

.banner-card.tertiary .card-banner {
  background-color: var(--on-tertiary-container);
  box-shadow: 0 2px 2px -1px #410006; /* Updated shadow color with RGBA */
}

/*-----------------------------------*\
  #CURATED PHOTOS & POPULAR VIDEO
\*-----------------------------------*/

/*-----------------------------------*\
  #COLLECTION
\*-----------------------------------*/

/*-----------------------------------*\
  #FOOTER
\*-----------------------------------*/

/*-----------------------------------*\
  #PHOTO PAGE
\*-----------------------------------*/

/*-----------------------------------*\
  #PHOTO DETAIL PAGE
\*-----------------------------------*/

/*-----------------------------------*\
  #FAVORITE PAGE
\*-----------------------------------*/

/*-----------------------------------*\
  #MEDIA QUERIES
\*-----------------------------------*/
